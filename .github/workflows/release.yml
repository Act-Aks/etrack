name: Build and Release

on:
    push:
        tags:
            - 'prod/*'
    workflow_dispatch:

jobs:
    code-quality:
        uses: ./.github/workflows/code-quality.yml
        permissions:
            contents: read

    release:
        if: ${{ !failure() && !cancelled() && github.ref == 'refs/heads/main' }}
        needs: [code-quality]
        runs-on: macos-latest
        permissions:
            contents: write
            id-token: write
        steps:
            - name: Checkout repo
              uses: actions/checkout@v4
              with:
                  fetch-depth: 0

            - name: Setup Ruby
              uses: ruby/setup-ruby@v1
              with:
                  ruby-version: '3.2.6'
                  bundler-cache: true # runs 'bundle install' and caches installed gems automatically

            - name: Setup Node
              uses: actions/setup-node@v4
              with:
                  cache: 'yarn'
                  node-version-file: '.nvmrc'
                  always-auth: true

            - name: Set up our JDK environment
              uses: actions/setup-java@v4
              with:
                  java-version: '17'
                  distribution: 'zulu'

            - name: Install dependencies
              run: yarn install --immutable

            - name: Setup Environment file
              run: |
                  touch .env

                  echo EXPO_PUBLIC_FIREBASE_API_KEY=${{ secrets.FIREBASE_API_KEY }} >> .env
                  echo EXPO_PUBLIC_FIREBASE_AUTH_DOMAIN=${{ secrets.FIREBASE_AUTH_DOMAIN }} >> .env
                  echo EXPO_PUBLIC_FIREBASE_PROJECT_ID=${{ secrets.FIREBASE_PROJECT_ID }} >> .env
                  echo EXPO_PUBLIC_FIREBASE_STORAGE_BUCKET=${{ secrets.FIREBASE_STORAGE_BUCKET }} >> .env
                  echo EXPO_PUBLIC_FIREBASE_MESSAGING_SENDER_ID=${{ secrets.FIREBASE_MESSAGING_SENDER_ID }} >> .env
                  echo EXPO_PUBLIC_FIREBASE_APP_ID=${{ secrets.FIREBASE_APP_ID }} >> .env
                  echo EXPO_PUBLIC_CLOUDINARY_CLOUD_NAME=${{ secrets.CLOUDINARY_CLOUD_NAME }} >> .env
                  echo EXPO_PUBLIC_CLOUDINARY_UPLOAD_PRESET=${{ secrets.CLOUDINARY_UPLOAD_PRESET }} >> .env
                  echo EXPO_PUBLIC_CLOUDINARY_CLOUD_URL=${{ secrets.CLOUDINARY_CLOUD_URL }} >> .env
                  echo BASE_64_ANDROID_KEYSTORE_FILE=${{ secrets.BASE_64_ANDROID_KEYSTORE_FILE }} >> .env
                  echo ANDROID_KEYSTORE_FILE_NAME=${{ secrets.ANDROID_KEYSTORE_FILE_NAME }} >> .env
                  echo ANDROID_STORE_PASSWORD=${{ secrets.ANDROID_STORE_PASSWORD }} >> .env
                  echo ANDROID_KEY_ALIAS=${{ secrets.ANDROID_KEY_ALIAS }} >> .env
                  echo ANDROID_KEY_PASSWORD=${{ secrets.ANDROID_KEY_PASSWORD }} >> .env

            - name: Cache Gradle Wrapper
              uses: actions/cache@v4
              with:
                  path: |
                      ~/.gradle/caches
                      ~/.gradle/wrapper
                  key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*') }}
                  restore-keys: |
                      ${{ runner.os }}-gradle-

            - name: Build app
              run: yarn release:android

            - name: Upload apk to artifact
              uses: actions/upload-artifact@v4
              with:
                  name: apk-artifact
                  path: |
                      android/app/build/outputs/apk/release/app-release.apk
                  retention-days: 30
